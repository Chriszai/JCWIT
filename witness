<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <key attr.name="originFileName" attr.type="string" for="edge" id="originfile">
    <default>&lt;command-line&gt;</default>
  </key>
  <key attr.name="invariant" attr.type="string" for="node" id="invariant"/>
  <key attr.name="invariant.scope" attr.type="string" for="node" id="invariant.scope"/>
  <key attr.name="isViolationNode" attr.type="boolean" for="node" id="violation">
    <default>false</default>
  </key>
  <key attr.name="isEntryNode" attr.type="boolean" for="node" id="entry">
    <default>false</default>
  </key>
  <key attr.name="isSinkNode" attr.type="boolean" for="node" id="sink">
    <default>false</default>
  </key>
  <key attr.name="enterLoopHead" attr.type="boolean" for="edge" id="enterLoopHead">
    <default>false</default>
  </key>
  <key attr.name="cyclehead" attr.type="boolean" for="node" id="cyclehead">
    <default>false</default>
  </key>
  <key attr.name="threadId" attr.type="int" for="edge" id="threadId">
    <default>0</default>
  </key>
  <key attr.name="createThread" attr.type="int" for="edge" id="createThread">
    <default>0</default>
  </key>
  <key attr.name="sourcecodeLanguage" attr.type="string" for="graph" id="sourcecodelang"/>
  <key attr.name="programFile" attr.type="string" for="graph" id="programfile"/>
  <key attr.name="programHash" attr.type="string" for="graph" id="programhash"/>
  <key attr.name="specification" attr.type="string" for="graph" id="specification"/>
  <key attr.name="architecture" attr.type="string" for="graph" id="architecture"/>
  <key attr.name="producer" attr.type="string" for="graph" id="producer"/>
  <key attr.name="creationtime" attr.type="string" for="graph" id="creationtime"/>
  <key attr.name="startline" attr.type="int" for="edge" id="startline"/>
  <key attr.name="control" attr.type="string" for="edge" id="control"/>
  <key attr.name="assumption" attr.type="string" for="edge" id="assumption"/>
  <key attr.name="assumption.resultfunction" attr.type="string" for="edge" id="assumption.resultfunction"/>
  <key attr.name="assumption.scope" attr.type="string" for="edge" id="assumption.scope"/>
  <key attr.name="enterFunction" attr.type="string" for="edge" id="enterFunction"/>
  <key attr.name="returnFromFunction" attr.type="string" for="edge" id="returnFrom"/>
  <key attr.name="witness-type" attr.type="string" for="graph" id="witness-type"/>
  <graph edgedefault="directed">
    <data key="sourcecodelang">C</data>
    <node id="sink">
      <data key="invariant">anonlocal::2a = (void *)return_tmp1;</data>
      <data key="invariant.scope">java::StringValueOf04.main:([Ljava/lang/String;)V</data>
    </node>
    <node id="261.18">
      <data key="entry">true</data>
    </node>
    <edge source="261.18" target="262.32">
      <data key="originfile">StringValueOf04.java</data>
      <data key="startline">13</data>
    </edge>
    <node id="261.19"/>
    <node id="261.21"/>
    <node id="261.23"/>
    <node id="261.25"/>
    <node id="261.27"/>
    <node id="261.29"/>
    <node id="262.32">
      <data key="invariant">dynamic_object = nondet_symbol&lt;struct java::array[reference]&gt;(symex::nondet1);</data>
      <data key="invariant.scope">__CPROVER__start</data>
    </node>
    <edge source="262.32" target="265.46">
      <data key="originfile">StringValueOf04.java</data>
      <data key="startline">13</data>
    </edge>
    <node id="262.34"/>
    <node id="262.36"/>
    <node id="262.38"/>
    <node id="262.40"/>
    <node id="265.46">
      <data key="invariant">dynamic_object.@java.lang.Object.@class_identifier = "java::array[reference]";</data>
      <data key="invariant.scope">__CPROVER__start</data>
    </node>
    <edge source="265.46" target="268.50">
      <data key="originfile">StringValueOf04.java</data>
      <data key="startline">13</data>
    </edge>
    <node id="268.50">
      <data key="invariant">dynamic_object.length = nondet_array_length;</data>
      <data key="invariant.scope">__CPROVER__start</data>
    </node>
    <edge source="268.50" target="269.51">
      <data key="originfile">StringValueOf04.java</data>
      <data key="startline">13</data>
    </edge>
    <node id="269.51">
      <data key="invariant">dynamic_object.data = (void **)dynamic_array;</data>
      <data key="invariant.scope">__CPROVER__start</data>
    </node>
    <edge source="269.51" target="281.85">
      <data key="originfile">StringValueOf04.java</data>
      <data key="startline">13</data>
    </edge>
    <node id="269.53"/>
    <node id="269.55"/>
    <node id="269.57"/>
    <node id="269.59"/>
    <node id="269.61"/>
    <node id="281.85">
      <data key="invariant">dynamic_array = ARRAY_OF(null);</data>
      <data key="invariant.scope">__CPROVER__start</data>
    </node>
    <edge source="281.85" target="294.345">
      <data key="originfile">StringValueOf04.java</data>
      <data key="startline">13</data>
    </edge>
    <node id="281.121"/>
    <node id="281.157"/>
    <node id="281.193"/>
    <node id="281.229"/>
    <node id="294.345">
      <data key="invariant">dynamic_object$1 = nondet_symbol&lt;char [INFINITY()]&gt;(symex::nondet5);</data>
      <data key="invariant.scope">__CPROVER__start</data>
    </node>
    <edge source="294.345" target="2.354">
      <data key="originfile">StringValueOf04.java</data>
      <data key="startline">13</data>
    </edge>
    <node id="2.354">
      <data key="invariant">arg0a = &amp;dynamic_object;</data>
      <data key="invariant.scope">__CPROVER__start</data>
    </node>
    <edge source="2.354" target="3.359">
      <data key="originfile">org/sosy_lab/sv_benchmarks/Verifier.java</data>
      <data key="startline">21</data>
    </edge>
    <node id="2.356"/>
    <node id="3.359">
      <data key="invariant">dynamic_object$10 = nondet_symbol&lt;struct java.util.Random&gt;(symex::nondet22);</data>
      <data key="invariant.scope">java::org.sosy_lab.sv_benchmarks.Verifier.nondetBoolean:()Z</data>
    </node>
    <edge source="3.359" target="6.362">
      <data key="originfile">org/sosy_lab/sv_benchmarks/Verifier.java</data>
      <data key="startline">21</data>
    </edge>
    <node id="6.362">
      <data key="invariant">dynamic_object$10.@class_identifier = "java::java.util.Random";</data>
      <data key="invariant.scope">java::org.sosy_lab.sv_benchmarks.Verifier.nondetBoolean:()Z</data>
    </node>
    <edge source="6.362" target="9.367">
      <data key="originfile">org/sosy_lab/sv_benchmarks/Verifier.java</data>
      <data key="startline">21</data>
    </edge>
    <node id="9.367">
      <data key="invariant">this = &amp;dynamic_object$10;</data>
      <data key="invariant.scope">java::org.sosy_lab.sv_benchmarks.Verifier.nondetBoolean:()Z</data>
    </node>
    <edge source="9.367" target="48.375">
      <data key="originfile">org/sosy_lab/sv_benchmarks/Verifier.java</data>
      <data key="startline">21</data>
    </edge>
    <node id="48.375">
      <data key="invariant">this = &amp;dynamic_object$10;</data>
      <data key="invariant.scope">java::org.sosy_lab.sv_benchmarks.Verifier.nondetBoolean:()Z</data>
    </node>
    <edge source="48.375" target="49.378">
      <data key="originfile">StringValueOf04.java</data>
      <data key="startline">13</data>
    </edge>
    <node id="49.378">
      <data key="invariant">anonlocal::1i = (int)return_tmp0;</data>
      <data key="invariant.scope">java::StringValueOf04.main:([Ljava/lang/String;)V</data>
    </node>
    <edge source="49.378" target="52.424">
      <data key="originfile">StringValueOf04.java</data>
      <data key="startline">14</data>
    </edge>
    <node id="52.424">
      <data key="invariant">stub_ignored_arg0 = anonlocal::1i == 0 ? false : true;</data>
      <data key="invariant.scope">java::StringValueOf04.main:([Ljava/lang/String;)V</data>
    </node>
    <edge source="52.424" target="sink">
      <data key="originfile">StringValueOf04.java</data>
      <data key="startline">14</data>
    </edge>
  </graph>
</graphml>
